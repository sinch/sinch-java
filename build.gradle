plugins {
    id "java-library"
    id "maven-publish"
    id "org.openapi.generator" version "4.3.0"
    id "io.freefair.lombok" version "5.3.0"
    id "com.diffplug.spotless" version "5.8.2"
    id 'com.adarshr.test-logger' version "2.1.1"
}

repositories {
    mavenLocal()
    jcenter()
}

publishing {
    publications {
        "$project.name"(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            def repo = version.endsWith('-SNAPSHOT') ? "snapshots" : "releases"
            url = "https://nexus.int.clxnetworks.net/repository/clx-$repo-hosted"
            credentials {
                username = project.findProperty("clxRepoUser")
                password = project.findProperty("clxRepoPassword")
            }
        }
    }
}

dependencies {
    // Required by swagger generated models
    implementation "io.swagger:swagger-annotations:1.5.22"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    compileOnly "com.squareup.okhttp3:okhttp:4.9.0"
    compileOnly "org.apache.httpcomponents.client5:httpclient5:5.0.3"

    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation "javax.validation:validation-api:2.0.1.Final"

    testImplementation "com.github.tomakehurst:wiremock-jre8:2.27.2"
    testImplementation "com.squareup.okhttp3:okhttp:4.9.0"
    testImplementation "org.apache.httpcomponents.client5:httpclient5:5.0.3"
    testImplementation "org.assertj:assertj-core:3.19.0"
    testImplementation "org.awaitility:awaitility:4.0.3"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

spotless {
    java {
        googleJavaFormat()
        removeUnusedImports()
        trimTrailingWhitespace()
    }
}
tasks.build.dependsOn tasks.spotlessApply

test {
    useJUnitPlatform {
        excludeTags System.getProperty("ignoreTestTags") ?
                "none()" : "integrationTest"
    }
}

testlogger {
    showFullStackTraces false
    showStandardStreams true
}

tasks.withType(Test) {
    systemProperties = System.properties as Map<String, ?>
}

tasks.jar {
    manifest {
        attributes("Implementation-Title": project.name,
                "Implementation-Version": project.version)
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

def convApiSwaggerFile = new File("$buildDir/conversation-api.swagger.json")
task getConversationApiSwagger(type: AntDownload) {
    sourceUrl = "https://developers.sinch.com/openapi/5e8c97e796be52003d4ead78"
    target = convApiSwaggerFile
}
tasks.openApiGenerate.dependsOn getConversationApiSwagger

task renameConvApiSwaggerModels(type: Exec) {
    description "Removes the prefixes from the swagger generated models."
    commandLine "./remove_model_prefix.sh", "conversationapi", "Type", "V1"
}
tasks.openApiGenerate.finalizedBy renameConvApiSwaggerModels

openApiGenerate {
    generatorName = "java"
    library = "native"
    inputSpec = convApiSwaggerFile.toString()
    outputDir = "$buildDir/swagger"
    modelPackage = "com.sinch.sdk.model.conversationapi"
    generateModelTests = false
    generateModelDocumentation = false
    modelFilesConstrainedTo = [""]
}
sourceSets.main.java.srcDir "$buildDir/swagger/src/main/java"
compileJava.dependsOn tasks.openApiGenerate

class AntDownload extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        println("$sourceUrl -> $target")
        ant.get(src: sourceUrl, dest: target)
    }
}
